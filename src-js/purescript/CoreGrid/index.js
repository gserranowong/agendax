// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var isInRange = function (p) {
    return function (range) {
        var lte_v = range.begin.v <= p.v;
        var lte_h = range.begin.h <= p.h;
        var gte_v = range.end.v >= p.v;
        var gte_h = range.end.h >= p.h;
        return gte_h && (lte_h && (gte_v && lte_v));
    };
};
var nextCell = function (grid) {
    return function (range) {
        return function (cell) {
            var is_selected = isInRange(cell.position)(range);
            var is_active = (function () {
                if (is_selected) {
                    return true;
                };
                if (Data_Boolean.otherwise) {
                    return false;
                };
                throw new Error("Failed pattern match at CoreGrid (line 55, column 24 - line 56, column 53): " + [  ]);
            })();
            return {
                is_active: is_active,
                is_selected: is_selected,
                position: cell.position
            };
        };
    };
};
var next = function (g) {
    return function (r) {
        var f = nextCell(g)(r);
        return Data_Functor.map(Data_Functor.functorArray)(f)(g);
    };
};
var initializeGrid = function (h) {
    return function (v) {
        return Control_Bind.bind(Control_Bind.bindArray)(Data_Array.range(1)(h))(function (a) {
            return Control_Bind.bind(Control_Bind.bindArray)(Data_Array.range(1)(v))(function (b) {
                return Control_Applicative.pure(Control_Applicative.applicativeArray)({
                    is_active: false,
                    is_selected: false,
                    position: {
                        v: a,
                        h: b
                    }
                });
            });
        });
    };
};
module.exports = {
    initializeGrid: initializeGrid,
    next: next,
    isInRange: isInRange,
    nextCell: nextCell
};
